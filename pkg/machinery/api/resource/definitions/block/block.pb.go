// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v5.27.3
// source: resource/definitions/block/block.proto

package block

import (
	reflect "reflect"
	sync "sync"

	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// DeviceSpec is the spec for devices status.
type DeviceSpec struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type            string `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	Major           int64  `protobuf:"varint,2,opt,name=major,proto3" json:"major,omitempty"`
	Minor           int64  `protobuf:"varint,3,opt,name=minor,proto3" json:"minor,omitempty"`
	PartitionName   string `protobuf:"bytes,4,opt,name=partition_name,json=partitionName,proto3" json:"partition_name,omitempty"`
	PartitionNumber int64  `protobuf:"varint,5,opt,name=partition_number,json=partitionNumber,proto3" json:"partition_number,omitempty"`
	Generation      int64  `protobuf:"varint,6,opt,name=generation,proto3" json:"generation,omitempty"`
	DevicePath      string `protobuf:"bytes,7,opt,name=device_path,json=devicePath,proto3" json:"device_path,omitempty"`
	Parent          string `protobuf:"bytes,8,opt,name=parent,proto3" json:"parent,omitempty"`
}

func (x *DeviceSpec) Reset() {
	*x = DeviceSpec{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resource_definitions_block_block_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeviceSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeviceSpec) ProtoMessage() {}

func (x *DeviceSpec) ProtoReflect() protoreflect.Message {
	mi := &file_resource_definitions_block_block_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeviceSpec.ProtoReflect.Descriptor instead.
func (*DeviceSpec) Descriptor() ([]byte, []int) {
	return file_resource_definitions_block_block_proto_rawDescGZIP(), []int{0}
}

func (x *DeviceSpec) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *DeviceSpec) GetMajor() int64 {
	if x != nil {
		return x.Major
	}
	return 0
}

func (x *DeviceSpec) GetMinor() int64 {
	if x != nil {
		return x.Minor
	}
	return 0
}

func (x *DeviceSpec) GetPartitionName() string {
	if x != nil {
		return x.PartitionName
	}
	return ""
}

func (x *DeviceSpec) GetPartitionNumber() int64 {
	if x != nil {
		return x.PartitionNumber
	}
	return 0
}

func (x *DeviceSpec) GetGeneration() int64 {
	if x != nil {
		return x.Generation
	}
	return 0
}

func (x *DeviceSpec) GetDevicePath() string {
	if x != nil {
		return x.DevicePath
	}
	return ""
}

func (x *DeviceSpec) GetParent() string {
	if x != nil {
		return x.Parent
	}
	return ""
}

// DiscoveredVolumeSpec is the spec for DiscoveredVolumes status.
type DiscoveredVolumeSpec struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Size                uint64 `protobuf:"varint,1,opt,name=size,proto3" json:"size,omitempty"`
	SectorSize          uint64 `protobuf:"varint,2,opt,name=sector_size,json=sectorSize,proto3" json:"sector_size,omitempty"`
	IoSize              uint64 `protobuf:"varint,3,opt,name=io_size,json=ioSize,proto3" json:"io_size,omitempty"`
	Name                string `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	Uuid                string `protobuf:"bytes,5,opt,name=uuid,proto3" json:"uuid,omitempty"`
	Label               string `protobuf:"bytes,6,opt,name=label,proto3" json:"label,omitempty"`
	BlockSize           uint32 `protobuf:"varint,7,opt,name=block_size,json=blockSize,proto3" json:"block_size,omitempty"`
	FilesystemBlockSize uint32 `protobuf:"varint,8,opt,name=filesystem_block_size,json=filesystemBlockSize,proto3" json:"filesystem_block_size,omitempty"`
	ProbedSize          uint64 `protobuf:"varint,9,opt,name=probed_size,json=probedSize,proto3" json:"probed_size,omitempty"`
	PartitionUuid       string `protobuf:"bytes,10,opt,name=partition_uuid,json=partitionUuid,proto3" json:"partition_uuid,omitempty"`
	PartitionType       string `protobuf:"bytes,11,opt,name=partition_type,json=partitionType,proto3" json:"partition_type,omitempty"`
	PartitionLabel      string `protobuf:"bytes,12,opt,name=partition_label,json=partitionLabel,proto3" json:"partition_label,omitempty"`
	PartitionIndex      uint64 `protobuf:"varint,13,opt,name=partition_index,json=partitionIndex,proto3" json:"partition_index,omitempty"`
	Type                string `protobuf:"bytes,14,opt,name=type,proto3" json:"type,omitempty"`
	DevicePath          string `protobuf:"bytes,15,opt,name=device_path,json=devicePath,proto3" json:"device_path,omitempty"`
	Parent              string `protobuf:"bytes,16,opt,name=parent,proto3" json:"parent,omitempty"`
}

func (x *DiscoveredVolumeSpec) Reset() {
	*x = DiscoveredVolumeSpec{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resource_definitions_block_block_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DiscoveredVolumeSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DiscoveredVolumeSpec) ProtoMessage() {}

func (x *DiscoveredVolumeSpec) ProtoReflect() protoreflect.Message {
	mi := &file_resource_definitions_block_block_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DiscoveredVolumeSpec.ProtoReflect.Descriptor instead.
func (*DiscoveredVolumeSpec) Descriptor() ([]byte, []int) {
	return file_resource_definitions_block_block_proto_rawDescGZIP(), []int{1}
}

func (x *DiscoveredVolumeSpec) GetSize() uint64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *DiscoveredVolumeSpec) GetSectorSize() uint64 {
	if x != nil {
		return x.SectorSize
	}
	return 0
}

func (x *DiscoveredVolumeSpec) GetIoSize() uint64 {
	if x != nil {
		return x.IoSize
	}
	return 0
}

func (x *DiscoveredVolumeSpec) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *DiscoveredVolumeSpec) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *DiscoveredVolumeSpec) GetLabel() string {
	if x != nil {
		return x.Label
	}
	return ""
}

func (x *DiscoveredVolumeSpec) GetBlockSize() uint32 {
	if x != nil {
		return x.BlockSize
	}
	return 0
}

func (x *DiscoveredVolumeSpec) GetFilesystemBlockSize() uint32 {
	if x != nil {
		return x.FilesystemBlockSize
	}
	return 0
}

func (x *DiscoveredVolumeSpec) GetProbedSize() uint64 {
	if x != nil {
		return x.ProbedSize
	}
	return 0
}

func (x *DiscoveredVolumeSpec) GetPartitionUuid() string {
	if x != nil {
		return x.PartitionUuid
	}
	return ""
}

func (x *DiscoveredVolumeSpec) GetPartitionType() string {
	if x != nil {
		return x.PartitionType
	}
	return ""
}

func (x *DiscoveredVolumeSpec) GetPartitionLabel() string {
	if x != nil {
		return x.PartitionLabel
	}
	return ""
}

func (x *DiscoveredVolumeSpec) GetPartitionIndex() uint64 {
	if x != nil {
		return x.PartitionIndex
	}
	return 0
}

func (x *DiscoveredVolumeSpec) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *DiscoveredVolumeSpec) GetDevicePath() string {
	if x != nil {
		return x.DevicePath
	}
	return ""
}

func (x *DiscoveredVolumeSpec) GetParent() string {
	if x != nil {
		return x.Parent
	}
	return ""
}

// DiskSpec is the spec for Disks status.
type DiskSpec struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Size       uint64 `protobuf:"varint,1,opt,name=size,proto3" json:"size,omitempty"`
	IoSize     uint64 `protobuf:"varint,2,opt,name=io_size,json=ioSize,proto3" json:"io_size,omitempty"`
	SectorSize uint64 `protobuf:"varint,3,opt,name=sector_size,json=sectorSize,proto3" json:"sector_size,omitempty"`
	Readonly   bool   `protobuf:"varint,4,opt,name=readonly,proto3" json:"readonly,omitempty"`
	Model      string `protobuf:"bytes,5,opt,name=model,proto3" json:"model,omitempty"`
	Serial     string `protobuf:"bytes,6,opt,name=serial,proto3" json:"serial,omitempty"`
	Modalias   string `protobuf:"bytes,7,opt,name=modalias,proto3" json:"modalias,omitempty"`
	Wwid       string `protobuf:"bytes,8,opt,name=wwid,proto3" json:"wwid,omitempty"`
	BusPath    string `protobuf:"bytes,9,opt,name=bus_path,json=busPath,proto3" json:"bus_path,omitempty"`
	SubSystem  string `protobuf:"bytes,10,opt,name=sub_system,json=subSystem,proto3" json:"sub_system,omitempty"`
	Transport  string `protobuf:"bytes,11,opt,name=transport,proto3" json:"transport,omitempty"`
	Rotational bool   `protobuf:"varint,12,opt,name=rotational,proto3" json:"rotational,omitempty"`
	Cdrom      bool   `protobuf:"varint,13,opt,name=cdrom,proto3" json:"cdrom,omitempty"`
}

func (x *DiskSpec) Reset() {
	*x = DiskSpec{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resource_definitions_block_block_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DiskSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DiskSpec) ProtoMessage() {}

func (x *DiskSpec) ProtoReflect() protoreflect.Message {
	mi := &file_resource_definitions_block_block_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DiskSpec.ProtoReflect.Descriptor instead.
func (*DiskSpec) Descriptor() ([]byte, []int) {
	return file_resource_definitions_block_block_proto_rawDescGZIP(), []int{2}
}

func (x *DiskSpec) GetSize() uint64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *DiskSpec) GetIoSize() uint64 {
	if x != nil {
		return x.IoSize
	}
	return 0
}

func (x *DiskSpec) GetSectorSize() uint64 {
	if x != nil {
		return x.SectorSize
	}
	return 0
}

func (x *DiskSpec) GetReadonly() bool {
	if x != nil {
		return x.Readonly
	}
	return false
}

func (x *DiskSpec) GetModel() string {
	if x != nil {
		return x.Model
	}
	return ""
}

func (x *DiskSpec) GetSerial() string {
	if x != nil {
		return x.Serial
	}
	return ""
}

func (x *DiskSpec) GetModalias() string {
	if x != nil {
		return x.Modalias
	}
	return ""
}

func (x *DiskSpec) GetWwid() string {
	if x != nil {
		return x.Wwid
	}
	return ""
}

func (x *DiskSpec) GetBusPath() string {
	if x != nil {
		return x.BusPath
	}
	return ""
}

func (x *DiskSpec) GetSubSystem() string {
	if x != nil {
		return x.SubSystem
	}
	return ""
}

func (x *DiskSpec) GetTransport() string {
	if x != nil {
		return x.Transport
	}
	return ""
}

func (x *DiskSpec) GetRotational() bool {
	if x != nil {
		return x.Rotational
	}
	return false
}

func (x *DiskSpec) GetCdrom() bool {
	if x != nil {
		return x.Cdrom
	}
	return false
}

// SystemDiskSpec is the spec for SystemDisks status.
type SystemDiskSpec struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DiskId string `protobuf:"bytes,1,opt,name=disk_id,json=diskId,proto3" json:"disk_id,omitempty"`
}

func (x *SystemDiskSpec) Reset() {
	*x = SystemDiskSpec{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resource_definitions_block_block_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SystemDiskSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SystemDiskSpec) ProtoMessage() {}

func (x *SystemDiskSpec) ProtoReflect() protoreflect.Message {
	mi := &file_resource_definitions_block_block_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SystemDiskSpec.ProtoReflect.Descriptor instead.
func (*SystemDiskSpec) Descriptor() ([]byte, []int) {
	return file_resource_definitions_block_block_proto_rawDescGZIP(), []int{3}
}

func (x *SystemDiskSpec) GetDiskId() string {
	if x != nil {
		return x.DiskId
	}
	return ""
}

var File_resource_definitions_block_block_proto protoreflect.FileDescriptor

var file_resource_definitions_block_block_proto_rawDesc = []byte{
	0x0a, 0x26, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2f, 0x64, 0x65, 0x66, 0x69, 0x6e,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x2f, 0x62, 0x6c, 0x6f,
	0x63, 0x6b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x20, 0x74, 0x61, 0x6c, 0x6f, 0x73, 0x2e,
	0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x22, 0xf7, 0x01, 0x0a, 0x0a, 0x44,
	0x65, 0x76, 0x69, 0x63, 0x65, 0x53, 0x70, 0x65, 0x63, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a,
	0x05, 0x6d, 0x61, 0x6a, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x6d, 0x61,
	0x6a, 0x6f, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x6d, 0x69, 0x6e, 0x6f, 0x72, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x05, 0x6d, 0x69, 0x6e, 0x6f, 0x72, 0x12, 0x25, 0x0a, 0x0e, 0x70, 0x61, 0x72,
	0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0d, 0x70, 0x61, 0x72, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x29, 0x0a, 0x10, 0x70, 0x61, 0x72, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0f, 0x70, 0x61, 0x72, 0x74,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x1e, 0x0a, 0x0a, 0x67,
	0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0a, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1f, 0x0a, 0x0b, 0x64,
	0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x50, 0x61, 0x74, 0x68, 0x12, 0x16, 0x0a, 0x06,
	0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x61,
	0x72, 0x65, 0x6e, 0x74, 0x22, 0x83, 0x04, 0x0a, 0x14, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65,
	0x72, 0x65, 0x64, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x53, 0x70, 0x65, 0x63, 0x12, 0x12, 0x0a,
	0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04, 0x73, 0x69, 0x7a,
	0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x5f, 0x73, 0x69, 0x7a, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x73, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x53, 0x69,
	0x7a, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x69, 0x6f, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x06, 0x69, 0x6f, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75,
	0x75, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x12, 0x1d, 0x0a, 0x0a, 0x62, 0x6c, 0x6f,
	0x63, 0x6b, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x62,
	0x6c, 0x6f, 0x63, 0x6b, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x32, 0x0a, 0x15, 0x66, 0x69, 0x6c, 0x65,
	0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x5f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x73, 0x69, 0x7a,
	0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x13, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x79, 0x73,
	0x74, 0x65, 0x6d, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x1f, 0x0a, 0x0b,
	0x70, 0x72, 0x6f, 0x62, 0x65, 0x64, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x0a, 0x70, 0x72, 0x6f, 0x62, 0x65, 0x64, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x25, 0x0a,
	0x0e, 0x70, 0x61, 0x72, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x75, 0x75, 0x69, 0x64, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x70, 0x61, 0x72, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x55, 0x75, 0x69, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x70, 0x61, 0x72, 0x74, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x70, 0x61,
	0x72, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x70,
	0x61, 0x72, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x18, 0x0c,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x70, 0x61, 0x72, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x4c,
	0x61, 0x62, 0x65, 0x6c, 0x12, 0x27, 0x0a, 0x0f, 0x70, 0x61, 0x72, 0x74, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0e, 0x70,
	0x61, 0x72, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x12, 0x0a,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x70, 0x61, 0x74, 0x68,
	0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x50, 0x61,
	0x74, 0x68, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x10, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x22, 0xe0, 0x02, 0x0a, 0x08, 0x44,
	0x69, 0x73, 0x6b, 0x53, 0x70, 0x65, 0x63, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x69,
	0x6f, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x69, 0x6f,
	0x53, 0x69, 0x7a, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x5f, 0x73,
	0x69, 0x7a, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x73, 0x65, 0x63, 0x74, 0x6f,
	0x72, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x61, 0x64, 0x6f, 0x6e, 0x6c,
	0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x72, 0x65, 0x61, 0x64, 0x6f, 0x6e, 0x6c,
	0x79, 0x12, 0x14, 0x0a, 0x05, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x65, 0x72, 0x69, 0x61,
	0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x12,
	0x1a, 0x0a, 0x08, 0x6d, 0x6f, 0x64, 0x61, 0x6c, 0x69, 0x61, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x6d, 0x6f, 0x64, 0x61, 0x6c, 0x69, 0x61, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x77,
	0x77, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x77, 0x77, 0x69, 0x64, 0x12,
	0x19, 0x0a, 0x08, 0x62, 0x75, 0x73, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x62, 0x75, 0x73, 0x50, 0x61, 0x74, 0x68, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x75,
	0x62, 0x5f, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x73, 0x75, 0x62, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x72, 0x61,
	0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x72,
	0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x72, 0x6f, 0x74, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x72, 0x6f, 0x74,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x64, 0x72, 0x6f, 0x6d,
	0x18, 0x0d, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x63, 0x64, 0x72, 0x6f, 0x6d, 0x22, 0x29, 0x0a,
	0x0e, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x44, 0x69, 0x73, 0x6b, 0x53, 0x70, 0x65, 0x63, 0x12,
	0x17, 0x0a, 0x07, 0x64, 0x69, 0x73, 0x6b, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x64, 0x69, 0x73, 0x6b, 0x49, 0x64, 0x42, 0x74, 0x0a, 0x28, 0x64, 0x65, 0x76, 0x2e,
	0x74, 0x61, 0x6c, 0x6f, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x2e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x62,
	0x6c, 0x6f, 0x63, 0x6b, 0x5a, 0x48, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d,
	0x2f, 0x73, 0x69, 0x64, 0x65, 0x72, 0x6f, 0x6c, 0x61, 0x62, 0x73, 0x2f, 0x74, 0x61, 0x6c, 0x6f,
	0x73, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x72, 0x79, 0x2f,
	0x61, 0x70, 0x69, 0x2f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2f, 0x64, 0x65, 0x66,
	0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_resource_definitions_block_block_proto_rawDescOnce sync.Once
	file_resource_definitions_block_block_proto_rawDescData = file_resource_definitions_block_block_proto_rawDesc
)

func file_resource_definitions_block_block_proto_rawDescGZIP() []byte {
	file_resource_definitions_block_block_proto_rawDescOnce.Do(func() {
		file_resource_definitions_block_block_proto_rawDescData = protoimpl.X.CompressGZIP(file_resource_definitions_block_block_proto_rawDescData)
	})
	return file_resource_definitions_block_block_proto_rawDescData
}

var file_resource_definitions_block_block_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_resource_definitions_block_block_proto_goTypes = []any{
	(*DeviceSpec)(nil),           // 0: talos.resource.definitions.block.DeviceSpec
	(*DiscoveredVolumeSpec)(nil), // 1: talos.resource.definitions.block.DiscoveredVolumeSpec
	(*DiskSpec)(nil),             // 2: talos.resource.definitions.block.DiskSpec
	(*SystemDiskSpec)(nil),       // 3: talos.resource.definitions.block.SystemDiskSpec
}
var file_resource_definitions_block_block_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_resource_definitions_block_block_proto_init() }
func file_resource_definitions_block_block_proto_init() {
	if File_resource_definitions_block_block_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_resource_definitions_block_block_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*DeviceSpec); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resource_definitions_block_block_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*DiscoveredVolumeSpec); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resource_definitions_block_block_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*DiskSpec); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resource_definitions_block_block_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*SystemDiskSpec); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_resource_definitions_block_block_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_resource_definitions_block_block_proto_goTypes,
		DependencyIndexes: file_resource_definitions_block_block_proto_depIdxs,
		MessageInfos:      file_resource_definitions_block_block_proto_msgTypes,
	}.Build()
	File_resource_definitions_block_block_proto = out.File
	file_resource_definitions_block_block_proto_rawDesc = nil
	file_resource_definitions_block_block_proto_goTypes = nil
	file_resource_definitions_block_block_proto_depIdxs = nil
}
